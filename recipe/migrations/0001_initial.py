# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-03-28 21:46
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingrediant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('spice_type', models.CharField(choices=[('0', 'Choose spice...'), ('solt', 'Solt'), ('sugar', 'Sugar')], default='0', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('food_type', models.CharField(choices=[('0', 'Choose food type...'), ('soup', 'Soup'), ('stewed_vegies', 'Stewed Vegetables'), ('coocked_meat', 'Coocked Meat'), ('baked_meat', 'Baked Meat'), ('solted_cake', 'Solted Cake'), ('sweet_cake', 'Sweet Cake'), ('torte', 'Torte'), ('salad', 'Salad')], default='0', max_length=30)),
                ('description', models.TextField()),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='Publication date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Modification date')),
                ('independet_author', models.CharField(blank=True, max_length=120, null=True)),
                ('source_url', models.CharField(blank=True, max_length=250, null=True, verbose_name='Source web site')),
            ],
            options={
                'ordering': ['-pub_date', 'title'],
            },
        ),
        migrations.CreateModel(
            name='RecipeAuthor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, help_text='You have to add chef photo.', max_length=255, null=True, upload_to='images/chefs/')),
                ('user', models.ForeignKey(help_text='Please provide chef', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RecipeImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('image', models.ImageField(max_length=255, upload_to='images/recipes/')),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measure_unit', models.CharField(choices=[('0', 'Choose measure unit...'), ('gramm', 'g'), ('dekagramm', 'dkg'), ('kilogramm', 'kg'), ('tea_spun', 'Tea spun'), ('table_spun', 'Table spun'), ('quantity', 'quantity'), ('piece', 'piece')], default='0', max_length=20)),
                ('quantity', models.IntegerField()),
                ('ingrediant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipe.Ingrediant')),
            ],
        ),
        migrations.AddField(
            model_name='recipe',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipe.RecipeAuthor'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='image',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipe.RecipeImage'),
        ),
        migrations.AddField(
            model_name='ingrediant',
            name='recipe',
            field=models.ManyToManyField(to='recipe.Recipe'),
        ),
    ]
